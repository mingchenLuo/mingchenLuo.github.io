[{"title":"C++学习路线","path":"/2024/12/22/C-C-学习路线/","content":"本文介绍了博主沿用的C++的学习路线，需要的小伙伴可以参考 学习大纲 C++语法基础 C++进阶 软件开发通用 后端开发通用 C++项目实战 一、C++语法基础基础教程： 入门B站免费教程就够了：黑马程序员C++教程 搭配菜鸟教程食用：C++菜鸟教程 开发工具： 本地开发工具：Visual Studio、Dev Cpp等。 在线编程工具：runcode 本阶段学习后练习： XX管理系统（控制台运行） Leetcode入门级别算法 知识点 基础概念 常量 变量 关键字 标识符 数据类型 转义字符 数据输入 运算符 表达式 控制结构 条件分支 循环 函数 函数重载 默认参数 指针 空指针 野指针 结构体 内存管理 内存模型 动态内存分配 动态内存释放 引用 面向对象编程 类 对象 封装 成员变量 成员函数 this指针 调用其他类 类特性 构造函数 析构函数 拷贝构造函数 静态成员 友元 友元全局函数 友元类 友元成员函数 运算符重载 继承 对象初始化顺序 同名成员问题 多继承 虚继承 菱形继承 多态 虚函数 纯虚函数 抽象类 虚析构函数 纯虚析构函数 文件操作 读文本文件 写文本文件 读二进制文件 写二进制文件 异常处理 抛出 捕获 异常类型 标准异常 模板 函数模板 类模板 STL 容器 vector string pair map list set stack deque 迭代器 算法 排序 查找 函数对象 谓词 一元谓词 二元谓词 内建函数对象 二、C++进阶上个阶段我们主要通过看视频来快速入门 C++ 基础编程语法，而这个阶段要做的是巩固基础、学习更多 C++ 的特性、甚至是底层原理，建议大家通过阅读经典书籍的方式来学习。 先系统巩固 C++ 基础及进阶语法，可以读下面 2 本书籍： 《C++ Primer 第五版》 《Effective C++》 再学习STL源码，阅读： 《STL源码剖析》 然后学习Linux服务端编程，阅读： 《Linux高性能服务器编程》 《Linux多线程服务端编程》 知识点 RAII C++11新特性 自动类型推导 lambda表达式 智能指针 移动语义 右值引用 标准多线程库 nullptr关键字 类型转换 static_cast reinterpret_cast dynamic_cast const_cast 异常处理 栈解旋 异常接口声明 异常对象生命周期 工具 编译工具 gcc clang 构建工具 cmake 调试工具 gdb 静态分析工具 clang static analyzer 编码规范 Google C++ Style 程序执行原理 编译 链接 静态链接 动态链接 STL容器实现原理 vector string list pair map set deque stack 三、软件开发通用知识点 企业项目研发流程 Git &amp; Github Linux系统 设计模式 软件工程 四、C++开发通用 （根据岗位选择学习）以后端开发为例知识点 数据库 开发框架 包管理工具 Redis 消息队列 Nginx 微服务 容器 架构设计 五、C++项目实战由于 C++ 是个相对底层、注重基础的编程语言，很多 C++ 的练手项目都是 “手写轮子” 相关的，比如下面这些： 编程语言 用 C 语言实现自己的编程语言：https://buildyourownlisp.com/ 开发工具 开发自己的文本编辑器：https://viewsourcecode.org/snaptoken/kilo/ 工具库 手写简易 STL：https://github.com/Alinshans/MyTinySTL 简单 JSON 库：https://github.com/dropbox/json11 开发框架 网络编程库 muduo：https://github.com/chenshuo/muduo 微信 RPC 框架 phxrpc：https://github.com/Tencent/phxrpc （简化版的微信后台 RPC 框架，冲鹅厂的同学推荐看） 服务器 轻量级 Web 服务器学习：https://github.com/qinguoyi/TinyWebServer 牛客 Linux 服务器教程：https://www.nowcoder.com/courses/cover/live/504 高性能 web 服务器项目：https://github.com/linyacool/WebServer 分布式系统 MIT6.824 中文教程：https://mit-public-courses-cn-translatio.gitbook.io","tags":["编程语言"]}]